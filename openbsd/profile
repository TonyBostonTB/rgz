#!/bin/sh

PATH="$HOME/bin:$PATH"
LC_ALL='en_US.UTF-8'
VISUAL='vi'
PS1='\w '
export PATH LC_ALL VISUAL PS1

quits() { aucat -i "$HOME/src/www/quits.wav"; }

start_tmux() {
  if ! tmux new-session -As 0 -n "$1" "cd $2 && $3" 2>/dev/null;then
    if tmux select-window -t "$1" 2>/dev/null;then
      if tmux list-windows|grep ": ${1}\\*">/dev/null;then cd "$2"||return;fi
    else
      if tmux show-window-option automatic-rename|grep off>/dev/null;then
        tmux new-window -n "$1" -c "$2" sh -c "$3"
      else
        tmux rename-window "$1" && cd "$2" && sh -c "$3"
      fi
    fi
  fi
}

j()   { start_tmux 'j'   "$HOME/prv/j"       'vi my.journal'; }
m()   { start_tmux 'm'   "$HOME/pub/music"   'cmus'; }
n()   { start_tmux 'n'   "$HOME/downloads"   'newsboat'; }
o()   { start_tmux 'o'   "$HOME/prv/openvpn" 'doas openvpn --config default.ovpn'; }
www() { start_tmux 'www' "$HOME/src/www"     'vi index.md'; }

export DOCS='/var/www/htdocs/www.romanzolotarev.com'
export BSDJOBS='/var/www/htdocs/www.bsdjobs.com'
s() { cd "$HOME/src/www" && ssg watch --clean||return; }
sbsdjobs() { cd "$HOME/src/bsdjobs" &&
  WEBSITE_TITLE="#BSDjobs" \
  SERVER_NAME="www.bsdjobs.com" \
  SERVER_PROTO="https" \
  RSS_AUTHOR="hi@romanzolotarev.com (Roman Zolotarev)" \
  RSS_DESCRIPTION="Open BSD jobs. Updated weekly. OpenBSD, FreeBSD, NetBSD, DragonFly BSD" \
  COPYRIGHT_YEAR="2018" \
  DOCS="$BSDJOBS" ssg watch --clean||return; }
d() { [ -n "$1" ] && { rsync -azvPc --delete-excluded "$DOCS" "$1:/var/www/htdocs/"; }; }
dbsdjobs() { rsync -azvPc --delete-excluded "$BSDJOBS" "www:/var/www/htdocs/";quits & }

sync_logs() { [ -n "$1" ] && { rsync -azvPc "$1:/var/www/logs/*" "$HOME/prv/logs/$1/"; quits & }; }

png() { optipng -preserve -keep -strip all -o7 "$1"; }
jpeg() { cp "$1" "$1.bak" && jpegoptim --strip-all --preserve --preserve-perms --verbose -m80 "$1"; }
fit() { cp "$1" "$1.original" && convert -resize 1200 "$1.original" "$1"; }
fit50() { cp "$1" "$1.original" && convert -resize 50 "$1.original" "$1"; }
fit120() { cp "$1" "$1.original" && convert -resize 120 "$1.original" "$1"; }

c() { clear; PS1='$ '; }

alias feh='feh -.Zd'
alias cp='cp -i'
alias l='ls -aF'
alias ll='ls -lahF'
alias mv='mv -i'
alias rm='rm -i'
alias du='du -hd1'
alias b="vi \$HOME/.profile && . \$HOME/.profile"

# shellcheck disable=SC2086
update_complete_pass() {
  pass_list=$(pass ls)
  set -A complete_pass -- init passphrase add import show export ls
  set -A complete_pass_add -- $pass_list
  set -A complete_pass_edit -- $pass_list
  set -A complete_pass_export -- $pass_list
  set -A complete_pass_mv -- $pass_list
  set -A complete_pass_show -- $pass_list
}
update_complete_pass
pass_show() { pass show "$1" && update_complete_pass; }
pass_add() { pass add "$1" && update_complete_pass; }
pass_edit() { pass edit "$1"; }
pass_export() { pass export "$1" && update_complete_pass; }

LOCAL_PKG_PATH="$HOME/pub/OpenBSD/$(uname -r)/packages/$(uname -m)"
pkg_add_from_cache() { doas env PKG_PATH="$LOCAL_PKG_PATH" pkg_add "$@"; }
pkg_add_with_cache() { mkdir -p "$LOCAL_PKG_PATH" && doas env PKG_CACHE="$LOCAL_PKG_PATH" pkg_add "$@"; }

mnt() { [ -n "$1" ] && doas mkdir -p "/mnt/$1" && doas mount "/dev/$1" "/mnt/$1" && cd "/mnt/$1"||return; }
umnt() { [ -n "$1" ] && doas umount "/dev/$1"; }
pics() { mnt sd1i && cd DCIM && rsync -avPc --chown=romanzolotarev:romanzolotarev . "$HOME/downloads" && cd "$HOME/downloads" && umnt sd1i && feh ./**/*; }

aria() { mkdir -p "$HOME/downloads" && (cd "$HOME/downloads" && aria2c "$1"); }
yt() { mkdir -p "$HOME/downloads" && (cd "$HOME/downloads" && youtube-dl "$1"); }
yl() { mkdir -p "$HOME/downloads" && (cd "$HOME/downloads" && youtube-dl -f 'bestvideo[height<=144]+bestaudio/best[height<=144]' "$1"); }
