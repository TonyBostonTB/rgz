#!/bin/sh

LC_ALL='en_US.UTF-8'
PATH="$HOME/bin:$PATH"
PS1='\w '
VISUAL='vi'
export LC_ALL PATH PS1 VISUAL

start_tmux() {
  if ! tmux new-session -As 0 -n "$1" "cd $2 && $3" 2>/dev/null;then
    if tmux select-window -t "$1" 2>/dev/null;then
      if tmux list-windows|grep ": ${1}\\*">/dev/null;then cd "$2"||return;fi
    else
      if tmux show-window-option automatic-rename|grep off>/dev/null;then
        tmux new-window -n "$1" -c "$2" sh -c "$3"
      else
        tmux rename-window "$1" && cd "$2" && sh -c "$3"
      fi
    fi
  fi
}

j()   { start_tmux 'j'   "$HOME/prv/j"       'vi my.journal'; }
m()   { start_tmux 'm'   "$HOME/pub/music"   'cmus'; }
n()   { start_tmux 'n'   "$HOME/downloads"   'newsboat'; }
o()   { start_tmux 'o'   "$HOME/prv/openvpn" 'doas openvpn --config default.ovpn'; }

book() { start_tmux 'book'    "$HOME/prv/book"   'vi index.md'; }
bsd()  { start_tmux 'bsdjobs' "$HOME/src/bsdjobs" 'vi index.md'; }
www()  { start_tmux 'www'     "$HOME/src/www"     'vi index.md'; }

s() { ssg watch --clean||return; }
sync_logs() { [ -n "$1" ] && { rsync -azvPc "$1:/var/www/logs/*" "$HOME/prv/logs/$1/"; }; }

png() { optipng -preserve -strip all -o7 "$1"; }
jpeg() { jpegoptim --strip-all --preserve --preserve-perms --verbose -m80 $@; }
jpeg50() { jpegoptim --strip-all --preserve --preserve-perms --verbose -m50 $@; }
jpeg20() { jpegoptim --strip-all --preserve --preserve-perms --verbose -m20 $@; }
fit() { convert -resize 1200 "$1" "$1"; jpeg "$1"; }
fit50() { convert -resize 50 "$1" "$1"; jpeg "$1"; }
fit120() { convert -resize 120 "$1" "$1"; jpeg "$1"; }

alias cp='cp -i'
alias l='ls -aF'
alias ll='ls -lahF'
alias mv='mv -i'
alias rm='rm -i'

alias ga='git add . -p'
alias gc='git commit'
alias gd='git diff'
alias gf='git commit -amf'
alias gl='git log --oneline'
alias gp='git push www && git push'
alias gpf='git push -f www && git push -f'
alias gr='git rebase -i HEAD~20'
alias gs='git status'

alias a="vi \$HOME/.profile && . \$HOME/.profile"

# shellcheck disable=SC2086
update_complete_pass() {
  pass_list=$(pass ls)
  set -A complete_pass -- init passphrase add import show export ls
  set -A complete_pass_add -- $pass_list
  set -A complete_pass_edit -- $pass_list
  set -A complete_pass_export -- $pass_list
  set -A complete_pass_show -- $pass_list
}
update_complete_pass
pass_add() { pass add "$1" && update_complete_pass; }
pass_edit() { pass edit "$1"; }
pass_export() { pass export "$1"; }
pass_show() { pass show "$1"; }

mnt() { [ -n "$1" ] && doas mkdir -p "/mnt/$1" && doas mount "/dev/$1" "/mnt/$1" && cd "/mnt/$1"||return; }
umnt() { [ -n "$1" ] && doas umount "/dev/$1"; }
pics() { mnt sd1i && cd DCIM && rsync -avP --chown=$(whoami) . "$HOME/downloads/pics" && cd "$HOME/downloads/pics" && umnt sd1i; }
xrm() { sxiv -tor "${1:-.}" | xargs -r rm; }
x() { sxiv -tor "${1:-.}"; }

utf2html() { [ -f "$1" ] && cp "$1" "$1.orig" && uconv -f utf-8 -t ascii --callback escape-xml-dec "$1.orig" > "$1"; }

aria() { mkdir -p "$HOME/downloads" && (cd "$HOME/downloads" && aria2c "$1"); }
yt() { mkdir -p "$HOME/downloads" && (cd "$HOME/downloads" && youtube-dl "$1"); }
yl() { mkdir -p "$HOME/downloads" && (cd "$HOME/downloads" && youtube-dl -f 'bestvideo[height<=144]+bestaudio/best[height<=144]' "$1"); }

p() { PS1='$ '; clear; }
t() { [ -n "$1" ] && ls "$1" | entr -c "./$@"; }

alias cabal='env TMPDIR=/usr/local/cabal/build/ cabal'
