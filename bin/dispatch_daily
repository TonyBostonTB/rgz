#!/bin/sh -e

main () {
	DB='/var/www/db/rgz'
	test -d "$DB" || fail "$DB: not found"
	TIME_FMT='+%Y-%m-%d %H:%M:%S'
	PADDLE_SUBS="$DB/paddle/subscriptions"

	paddle_init
	paddle_fetch_subscriptions
	paddle_update_subscriptions
}


##########################################################################


paddle_update_subscriptions() {
	test -f "$PADDLE_SUBS" || fail "$PADDLE_SUBS: not found"
	>&2 echo "[dispatch_daily] $(date "$TIME_FMT") paddle_subscriptions"
	find "$DB/members" -name 'email' -type f |
	while read -r f
	do
		m=${f%*/email}
		e=$(cat "$f")
		test -n "$e" || continue
		sub=$(< "$PADDLE_SUBS" jq -r '
			.response[] |
			select(.user_email=="'"$e"'")
		')
		test -n "$sub" || continue
		echo "$m: $e"
		make_file "$m/paddle_subscription" "$sub"

		next_due=$(echo "$sub" | jq -r '.next_payment.date')
		sub_state=$(echo "$sub" | jq -r '.state')
		if test "$sub_state" = 'active'
		then
			e_at=$(date -j '+%s' "$(echo "$next_due" | tr -d'-')"0000)
			make_file "$m/expires_at" "$e_at"
		fi

	done
}


paddle_fetch_subscriptions() {
	>&2 printf '[dispatch_daily] %s paddle_fetch_subscriptions ' "$(date "$TIME_FMT")"
	test -w "$PADDLE_SUBS" || fail "can't write $PADDLE_SUBS"
	curl -s -X POST \
	-o "$PADDLE_SUBS" \
	-d vendor_id="$PADDLE_ID" \
	-d vendor_auth_code="$PADDLE_AUTH_CODE" \
	https://vendors.paddle.com/api/2.0/subscription/users
	jq -r '.response[] | .user_email' "$PADDLE_SUBS" | >&2 wc -l
	jq -r '
		.response[] |
		.next_payment.date + " " +
		.next_payment.currency + " " +
		(.next_payment.amount | tostring) + "	" +
		.state + "	" +
		.user_email
	' "$PADDLE_SUBS" | sort -n
}


##########################################################################


make_file() {
	test -f "$1" && rm "$1"
	echo "$2" > "$1"
	chmod 0660 "$1"
	doas chown www:db "$1"
}


paddle_init() {
	f="$DB/paddle/id"
	test -r "$f" || fail "PADDLE_ID: $f not a file"
	PADDLE_ID=$(cat "$f")

	f="$DB/paddle/auth_code"
	test -r "$f" || fail "PADDLE_AUTH_CODE: $f not a file"
	PADDLE_AUTH_CODE=$(cat "$f")
}


fail() {
	>&2 echo "$1"
	exit 1
}

main
