#!/bin/sh
#
# https://www.romanzolotarev.com/bin/ssg2
# Copyright 2018 Roman Zolotarev <hi@romanzolotarev.com>
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
set -e

main() {
	test -n "$1" || usage
	test -n "$2" || usage
	test -n "$3" || usage
 	test -d "$1" || not_dir "$1"
 	test -d "$2" || not_dir "$2"

	src=$(readlink -f "$1")
	dst=$(readlink -f "$2")


	title="$3"
	head=$(
	wrap_file "$src/_rss.html"
	wrap_file "$src/_styles.css" '<style>' '</style>'
	wrap_file "$src/_scripts.js" '<script>' '</script>'
	)
	header=$(wrap_file "$src/_header.html")
	footer=$(wrap_file "$src/_footer.html")


	list_dirs "$src" |
	(cd "$src" && cpio -pd "$dst")

	fs=$(
 	if test -f "$dst/.files"
	then list_affected_files "$src" "$dst/.files"
	else list_files "$1"
	fi
	)

	if test -n "$fs"
	then
		echo "$fs" |
		tee "$dst/.files"

		echo "$fs" |
		grep '.html$' |
		render_html_files "$src" "$dst" \
		"$title" "$head" "$header" "$footer"

		echo "$fs" |
		grep '.md$' |
		render_md_files "$src" "$dst" \
		"$title" "$head" "$header" "$footer"

		echo "$fs" |
		grep -Ev '.md$|.html$' |
		(cd "$src" && cpio -p "$dst")
	fi

	print_status "$fs" >&2
}

wrap_file() {
	if test -f "$1"
	then echo "$2$(cat "$1")$3"
	fi
}

print_status() {
	printf '[ssg] '
	if test -n "$1"
	then echo "$1" | line_counter 'file' 'files'
	else echo 'ok'
	fi
}


line_counter() {
	wc -l |
	awk '{printf $1" "}($1=="1"){print "file"}($1>"1"){print "files"}'
}


usage() {
	echo "usage: ${0##*/} src dst title" >&2
	exit 1
}


not_dir() {
	echo "${0##*/}: $1: No such directory" >&2
	exit 2
}


list_dirs() {
	cd "$1" && find . -type d ! -name '.' ! -path '*/.*' ! -path '*/_*'
}


list_files() {
	cd "$1" && find . -type f ! -name '.' ! -path '*/.*' ! -path '*/_*'
}


list_dependant_files () {
	cd "$1" && find . -type f ! -name '.' ! -path '*/.*' ! -path '*/_*' \
	\( -name '*.html' -o -name '*.md' -o -name '*.css' -o -name '*.js' \)
}


list_newer_files() {
	cd "$1" && find . -type f ! -name '.' ! -path '*/.*' -newer "$2"
}


has_partials() {
	grep -E '^./_.*html$|^./_.*js$|^./_.*css$' >/dev/null
}


list_affected_files() {
	fs=$(list_newer_files "$1" "$2")

	if echo "$fs" | has_partials
	then list_dependant_files "$1"
	else echo "$fs"
	fi
}


render_html_files() {
	while read -r f
	do render_html_file "$1" "3" "$4" "$5" "$6" < "$1/$f" > "$2/$f"
	done
}


render_md_files() {
	while read -r f
	do lowdown -D html-skiphtml -D smarty -d metadata < "$1/$f" |
	render_html_file "$1" "$3" "$4" "$5" "$6" > "$2/${f%\.md}.html"
	done
}


render_html_file() {
	body=$(cat)
	src="$1"
	site_title="$2"
	head="$3"
	header="$4"
	footer="$5"

	title=$(echo "$body" | grep '^<h1' | head -1 | sed 's/<[^>]*>//g')
	if test -z "$title"
	then echo "$body"
	else
		cat <<-EOF
		<!DOCTYPE html>
		<html lang="en">
		<head>
		<meta charset="UTF-8">
		<meta name="viewport"
		content="width=device-width, initial-scale=1">
		<link rel="icon" type="image/png" href="/favicon.png">
		<title>$title - $site_title</title>
		$head
		</head>
		<body>
		$header
		$body
		$footer
		</body>
		</html>
		EOF
	fi
}


main "$@"
